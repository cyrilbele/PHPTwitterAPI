<?php
/**
 * DirectMessagesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Twitter API v2
 *
 * Twitter API v2 available endpoints
 *
 * OpenAPI spec version: 2.60
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.36
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * DirectMessagesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DirectMessagesApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for dmConversationByIdEventIdCreate
     *
     * Send a new message to a DM Conversation.
     *
     */
    public function testDmConversationByIdEventIdCreate()
    {
    }

    /**
     * Test case for dmConversationIdCreate
     *
     * Create a new DM Conversation.
     *
     */
    public function testDmConversationIdCreate()
    {
    }

    /**
     * Test case for dmConversationWithUserEventIdCreate
     *
     * Send a new message to a user.
     *
     */
    public function testDmConversationWithUserEventIdCreate()
    {
    }

    /**
     * Test case for getDmConversationsIdDmEvents
     *
     * Get DM Events for a DM Conversation.
     *
     */
    public function testGetDmConversationsIdDmEvents()
    {
    }

    /**
     * Test case for getDmConversationsWithParticipantIdDmEvents
     *
     * Get DM Events for a DM Conversation.
     *
     */
    public function testGetDmConversationsWithParticipantIdDmEvents()
    {
    }

    /**
     * Test case for getDmEvents
     *
     * Get recent DM Events.
     *
     */
    public function testGetDmEvents()
    {
    }
}
